# GitHub Actions workflow
# https://help.github.com/en/actions/reference
#
# Copyright 2022 Jeffrey Sharp
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

name: Build

on:
  push:
    branches:
      - main
      - release/*
    tags:
      - release/*
  pull_request:
    branches:
      - main
      - release/*
  workflow_dispatch:
    # no options

env:
  # Minimize noise from dotnet CLI
  DOTNET_NOLOGO: 1

jobs:
  build:
    name: Build
    runs-on: windows-latest
    #url: https://github.com/actions/virtual-environments

    steps:
      - name: Check Out Code
        uses: actions/checkout@v2
        #url: https://github.com/actions/checkout

      - name: Configure .NET Core 3.1
        uses: actions/setup-dotnet@v1
        #url: https://github.com/actions/setup-dotnet
        with:
          dotnet-version: 3.1.x

      - name: Configure .NET 6.0
        uses: actions/setup-dotnet@v1
        #url: https://github.com/actions/setup-dotnet
        with:
          dotnet-version: 6.0.x

      - name: Stamp Version
        id: stamp
        run: >
          dotnet build .root.targets -c Release
          -p:StampOnBuild=true
          -p:SetGitHubActionsVersion=true
          -p:Branch=${{ github.ref }}
          -p:Counter=${{ github.run_number }}
          -p:RepositoryCommit=${{ github.sha }}

      - name: Restore NuGet Packages
        run: dotnet restore

      - name: Build
        run: >
          dotnet build --no-restore -c Release
          -p:TreatWarningsAsErrors=true
          -p:PackageOutputPath=${{ runner.temp }}\dist

      - name: Test
        run: >
          dotnet test --no-build -c Release
          --settings Coverlet.runsettings
          --results-directory:${{ runner.temp }}\coverage\raw

      - name: Prepare Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.9
        #url: https://github.com/danielpalme/ReportGenerator-GitHub-Action
        with:
          reports: ${{ runner.temp }}\coverage\raw\**\coverage.opencover.xml
          targetdir: ${{ runner.temp }}\coverage
          reporttypes: Cobertura;JsonSummary;Html_Dark;Badges
          verbosity: Warning

      - name: Save Coverage Report
        uses: actions/upload-artifact@v2
        #url: https://github.com/actions/upload-artifact
        with:
          name: Coverage Report
          path: ${{ runner.temp }}\coverage
          if-no-files-found: error

      - name: Save Package
        uses: actions/upload-artifact@v2
        #url: https://github.com/actions/upload-artifact
        with:
          name: Packages
          path: ${{ runner.temp }}\dist
          if-no-files-found: error

      - name: Publish Package
        if: startsWith(github.ref, 'refs/tags/release/')
        shell: pwsh
        run: >
          dotnet nuget push "${{ runner.temp }}\dist\*.nupkg"
          -s https://api.nuget.org/v3/index.json
          -k $env:NUGET_API_KEY
          --skip-duplicate
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        #url: https://github.com/ncipollo/release-action
        if: startsWith(github.ref, 'refs/tags/release/')
        with:
          name: ${{ steps.stamp.outputs.version }}
          prerelease: ${{ contains('-', steps.stamp.outputs.version) }}
          draft: true
          bodyFile: CHANGES.md
          artifacts: ${{ runner.temp }}\dist\*nupkg
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
